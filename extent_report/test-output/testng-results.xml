<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-02-07T18:49:22 IST" name="Default suite" finished-at="2020-02-07T18:49:23 IST" duration-ms="917">
    <groups>
    </groups>
    <test started-at="2020-02-07T18:49:22 IST" name="Default test" finished-at="2020-02-07T18:49:23 IST" duration-ms="917">
      <class name="test_extent_report.TestExtentReport">
        <test-method is-config="true" signature="setup()[pri:0, instance:test_extent_report.TestExtentReport@2f465398]" started-at="2020-02-07T18:49:22 IST" name="setup" finished-at="2020-02-07T18:49:22 IST" duration-ms="267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Test1()[pri:0, instance:test_extent_report.TestExtentReport@2f465398]" started-at="2020-02-07T18:49:22 IST" name="Test1" finished-at="2020-02-07T18:49:22 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test_extent_report.TestExtentReport@2f465398]" started-at="2020-02-07T18:49:22 IST" name="tearDown" finished-at="2020-02-07T18:49:22 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test1 status=SUCCESS method=TestExtentReport.Test1()[pri:0, instance:test_extent_report.TestExtentReport@2f465398] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="Test2()[pri:0, instance:test_extent_report.TestExtentReport@2f465398]" started-at="2020-02-07T18:49:22 IST" name="Test2" finished-at="2020-02-07T18:49:22 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [20] but found [10]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [20] but found [10]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at test_extent_report.TestExtentReport.Test2(TestExtentReport.java:90)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method signature="Test3()[pri:0, instance:test_extent_report.TestExtentReport@2f465398]" started-at="2020-02-07T18:49:22 IST" name="Test3" finished-at="2020-02-07T18:49:22 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test_extent_report.TestExtentReport@2f465398]" started-at="2020-02-07T18:49:22 IST" name="tearDown" finished-at="2020-02-07T18:49:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test2 status=FAILURE method=TestExtentReport.Test2()[pri:0, instance:test_extent_report.TestExtentReport@2f465398] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test_extent_report.TestExtentReport@2f465398]" started-at="2020-02-07T18:49:22 IST" name="tearDown" finished-at="2020-02-07T18:49:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test3 status=SUCCESS method=TestExtentReport.Test3()[pri:0, instance:test_extent_report.TestExtentReport@2f465398] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="Test4()[pri:0, instance:test_extent_report.TestExtentReport@2f465398]" started-at="2020-02-07T18:49:22 IST" name="Test4" finished-at="2020-02-07T18:49:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test4 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test_extent_report.TestExtentReport@2f465398]" started-at="2020-02-07T18:49:22 IST" name="tearDown" finished-at="2020-02-07T18:49:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test4 status=SUCCESS method=TestExtentReport.Test4()[pri:0, instance:test_extent_report.TestExtentReport@2f465398] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flush()[pri:0, instance:test_extent_report.TestExtentReport@2f465398]" started-at="2020-02-07T18:49:22 IST" name="flush" finished-at="2020-02-07T18:49:23 IST" duration-ms="562" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
      </class> <!-- test_extent_report.TestExtentReport -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
